services:
  mysql_db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: streaming_db
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./Back_end/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: ./Back_end/nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
      - "1935:1935"
    volumes:
      - ./Back_end/nginx/nginx.conf:/usr/local/nginx/conf/nginx.conf:ro
      - ./Back_end/nginx/rtmp.conf:/usr/local/nginx/conf/rtmp.conf:ro
      - ./Back_end/data/hls:/usr/local/nginx/html/live
      - ./Back_end/nginx/recordings:/usr/local/nginx/recordings
      - ./Back_end/data/recordings:/data/recordings
      - ./Back_end/nginx/logs:/usr/local/nginx/logs
      - ./Back_end/data:/data
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./Back_end/backendlivestreaming
      dockerfile: Dockerfile
    container_name: backend
    environment:
      DB_HOST: mysql_db
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: streaming_db
      DB_PORT: 3306
      NGINX_HOST: nginx
      RTMP_PORT: 1935
      HTTP_PORT: 80
    ports:
      - "3000:3000"
    depends_on:
      mysql_db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./Front_end/frontendstreaming
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://backend:3000
      - VITE_RTMP_URL=rtmp://nginx:1935
      - VITE_HLS_URL=http://nginx:8080
    depends_on:
      - backend
    networks:
      - app-network

  ffmpeg:
    build:
      context: ./Back_end/ffmpeg
      dockerfile: Dockerfile
    depends_on:
      - nginx
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
